/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package sistemacontable.libromayor;

import dbconnectionQueries.Select1;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author angel
 */
public class LibroMayor extends javax.swing.JPanel {

    /**
     * Creates new form Mayor
     */
    public LibroMayor() {
        initComponents();
        createAndShowGUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();

        jScrollPane1.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jScrollPane1MouseWheelMoved(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridLayout(0, 2, 10, 10));
        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jScrollPane1MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jScrollPane1MouseWheelMoved
        // Cambia la velocidad multiplicando el valor del evento por un factor
        int scrollAmount = evt.getWheelRotation() * 30; // Ajusta el factor según tus preferencias

        // Obtiene la posición actual de desplazamiento y aplica el nuevo desplazamiento
        JScrollBar verticalScrollBar = jScrollPane1.getVerticalScrollBar();
        verticalScrollBar.setValue(verticalScrollBar.getValue() + scrollAmount);
    }//GEN-LAST:event_jScrollPane1MouseWheelMoved

    
private void createAndShowGUI() {
        try {
            Select1 select = new Select1();

            ResultSet rs = select.obtenerNombresCuentas();

            if (rs.next()){
                do {
                    JTable table = createTable(rs.getString("cuenta"));

                    // Crear un renderizador personalizado para centrar los datos
                    DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                    centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);

                    // Aplicar el renderizador a todas las columnas
                    for (int i = 0; i < table.getColumnCount(); i++) {
                        table.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
                    }

                    table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                    if (table.getRowCount() != 0){
                        JScrollPane scrollPane = new JScrollPane(table);

                        // Configura el tamaño preferido del área visible de la tabla
                        table.setPreferredScrollableViewportSize(table.getPreferredSize());
                        table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);



                        jPanel1.add(scrollPane);
                    }
                }while (rs.next());
            }


        }catch (SQLException ignored){
        } catch (Exception ex) {
            Logger.getLogger(LibroMayor.class.getName()).log(Level.SEVERE, null, ex);
        }


        /*// Agregar 20 tablas
        for (int i = 1; i <= 20; i++) {
            JTable table = createTable();
            JScrollPane scrollPane = new JScrollPane(table);

            // Configura el tamaño preferido del área visible de la tabla
            table.setPreferredScrollableViewportSize(table.getPreferredSize());

            panel.add(scrollPane);
        }

        frame.add(new JScrollPane(panel));


        /* // Agregar 20 tablas
        for (int i = 1; i <= 20; i++) {
            JTable table = createTable();
            JScrollPane scrollPane = new JScrollPane(table);

            // Configura el tamaño preferido del área visible de la tabla
            table.setPreferredScrollableViewportSize(table.getPreferredSize());

            panel.add(scrollPane);
        }

        frame.add(new JScrollPane(panel));
        frame.setVisible(true);*/
    }
    
    private static JTable createTable(String nombreCuenta) throws Exception {

        try {
            Select1 select = new Select1();

            ResultSet rs = select.obtenerDeberHaberPorCuenta(nombreCuenta);

            List<Double> listaDeber = new ArrayList<>();
            List<Double> listaHaber = new ArrayList<>();

            if (rs.next()){
                do {
                    double deber = rs.getDouble("debe");
                    double haber = rs.getDouble("haber");


                    if (deber != 0.0){
                        listaDeber.add(deber);
                    }
                    if (haber != 0){
                        listaHaber.add(haber);

                    }
                }while (rs.next());
            }

            int mayor = Math.max(listaDeber.size(), listaHaber.size());


            String[] columnNames = {nombreCuenta, ""};
            DefaultTableModel model = new DefaultTableModel(null, columnNames){
                @Override
                public boolean isCellEditable (int row, int column) {
                    return false;
                }


            };

            model.addRow(new Object[]{"Debe", "Haber"});

            for (int i = 0; i < mayor; i++) {
                String[] strings = new String[]{"", ""};
                model.addRow(strings);
            }


            for (int i = 0; i < listaDeber.size(); i++) model.setValueAt("$" + listaDeber.get(i), i+1, 0);
            for (int i = 0; i < listaHaber.size(); i++) model.setValueAt("$" + listaHaber.get(i), i+1, 1);

            model.addRow(new Object[]{"Suma", "Suma"});

            double totalDeber, totalHaber;
            DecimalFormat format = new DecimalFormat("#.00");

            totalDeber = listaDeber.stream().mapToDouble(aDouble -> aDouble).sum();
            totalHaber = listaHaber.stream().mapToDouble(aDouble -> aDouble).sum();

            model.addRow(new Object[]{"$" + format.format(totalDeber), "$" + format.format(totalHaber)});

            double diferencia = Math.abs(totalDeber - totalHaber);

            if (totalDeber > totalHaber){
                model.addRow(new Object[]{"Total", ""});
                model.addRow(new Object[]{"$" + format.format(diferencia), ""});
            }else if (totalHaber > totalDeber){
                model.addRow(new Object[]{"", "Total"});
                model.addRow(new Object[]{"", "$" + format.format(diferencia)});
            }else{
                model.addRow(new Object[]{"Total", "Total"});
                model.addRow(new Object[]{"$00.00", "$00.00"});
            }




            return new JTable(model);

        }catch (Exception exception){
            System.err.println(exception.getMessage());
        }
            throw new RuntimeException();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package sistemacontable.librodiario;

import dbconnectionQueries.Select;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class LibroDiario extends javax.swing.JPanel {

    /**
     * Creates new form Libro_Diario
     */
    public LibroDiario() {
        initComponents();
        cargarDatosDeLibroDiario();
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(213, 219, 231));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("LIBRO DIARIO");

        jSeparator1.setForeground(new java.awt.Color(0, 51, 51));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Cuenta", "Código", "Debe", "Haber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTabbedPane1.addTab("Información Partidas", jScrollPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(339, 339, 339))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 68, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cargarDatosDeLibroDiario() {
        Select s = new Select();

        ResultSet rs = s.cargarPartidas();

        Partida partida = new Partida();
        LibroDiarioClass libro = new LibroDiarioClass();
        List<Partida> listaPartidas = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        try {
            while (rs.next()) {

                ResultSet rsCuentas = s.cargarLibroDiarioPorPartida(rs.getInt("idpartida"));
                List<LibroDiarioClass> listaCuentas = new ArrayList<>();

                while (rsCuentas.next()) {
                    listaCuentas.add(new LibroDiarioClass(rsCuentas.getString(1),
                            rsCuentas.getInt(2), rsCuentas.getDouble(3),
                            rsCuentas.getDouble(4), rs.getInt("idPartida")));
                }

                if (listaCuentas.isEmpty()) {
                    continue;
                }
                listaPartidas.add(new Partida(rs.getInt("idpartida"), rs.getString("fecha"),
                        rs.getString("descripcion"), listaCuentas));
            }
        } catch (SQLException sqlException) {
            throw new RuntimeException();
        }

        if (listaPartidas.isEmpty()) return;

        double totalDeber = 0, totalHaber = 0;

        for (Partida filaEncabezado : listaPartidas) {
            model.addRow(new Object[]{filaEncabezado.getFecha(), "Partida #" + filaEncabezado.getIdPartida()});
            for (LibroDiarioClass cuenta : filaEncabezado.getListaCuentas()) {
                model.addRow(new Object[]{"", cuenta.getHaber() > 0 ? "      " + cuenta.getCuenta(): cuenta.getCuenta(),
                cuenta.getCodigo(), "$" + cuenta.getDeber(),"$" + cuenta.getHaber()});
                totalDeber += cuenta.getDeber();
                totalHaber += cuenta.getHaber();
            }
            model.addRow(new Object[]{"Descripcion", filaEncabezado.getDescripcion()});
        }
        model.addRow(new Object[]{"Total", "", "", "$" + totalDeber, "$" + totalHaber});

    }

    private void cargarDatosDesdeBaseDeDatos() {
        try {
            Select s = new Select();
            ResultSet rs = s.loadDailyBook();

            DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
            // Llena la tabla con los datos de la base de datos
//            int i = 0;
            while (rs.next()) {
                String cuenta = rs.getString(1);
                String codigo = rs.getString(2);
                String debe = rs.getString(3);
                String haber = rs.getString(4);
                
                if(haber != null && Double.parseDouble(haber)>0){
                    cuenta = "      "+ cuenta;
                }
                Object[] fila = {
                    "",
                    cuenta,
                    codigo,
                    debe,
                    haber
                };
                tableModel.addRow(fila);
                jTable1.setRowHeight(30);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
